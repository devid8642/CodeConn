[tool.poetry]
name = "projeto-x"
version = "0.1.0"
description = "Gerenciador de projetos para uma organização independente de alunos da Estácio."
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "projeto_x"}]

[tool.poetry.dependencies]
python = "^3.10"
django = "^4.2.1"
django-environ = "^0.10.0"
parameterized = "^0.9.0"
six = "^1.16.0"
django-solo = "^2.1.0"
dj-database-url = "^2.0.0"
django-ckeditor = "^6.6.1"
psycopg = "^3.1.9"
django-storages = "^1.13.2"
boto3 = "^1.27.1"
whitenoise = {extras = ["brotli"], version = "^6.5.0"}
pillow = "^10.0.0"
django-cleanup = "^8.0.0"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^4.1.0"
taskipy = "^1.12.2"
blue = "^0.9.1"
ruff = "^0.1.9"
isort = "^5.13.2"
pytest = "^7.4.3"
pytest-django = "^4.7.0"
django-debug-toolbar = "^4.2.0"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "projeto_x.settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]

[tool.ruff]
line-length = 79
exclude = ['.venv', 'migrations']

[tool.isort]
profile = "black"
line_length = 79
extend_skip = ['migrations']

[tool.blue]
extend-exclude = '(migrations/)'

[tool.coverage.run]
omit = [
    '*/tests/*',
    'utils/*',
    'projeto_x/*',
    '*/migrations/*'
]

[tool.taskipy.tasks]
lint = 'ruff . && blue --check . --diff'
format = 'blue .  && isort .'
run = 'python manage.py runserver'
pre_test = 'task lint'
test = 'pytest -s --cov'
post_test = 'coverage html'


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
